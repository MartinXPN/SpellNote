apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId 'com.xpn.spellnote'
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 15
        versionName '2.0.1'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    splits {
        abi {
            enable true             // Enables building multiple APKs per ABI.
            reset()                 // Resets the list of ABIs that Gradle should create APKs for to none.
            include "mips", "x86", "x86_64", "arm64-v8a", "armeabi-v7a"
            universalApk false      // No universal APK that includes all ABIs
        }
    }
}

// Map for the version code that gives each ABI a value.
ext.abiCodes = [mips: 1, 'armeabi-v7a': 2, x86: 3, x86_64: 4, 'arm64-v8a': 5]

import com.android.build.OutputFile

// versionCode = ext.abiCodes * 1000 + variant.versionCode (variant.versionCode = defaultConfig.versionCode)
android.applicationVariants.all { variant ->

    // Assigns a different version code for each output APK other than the universal APK.
    variant.outputs.each { output ->

        // Stores the value of ext.abiCodes that is associated with the ABI for this variant.
        def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))

        // apk not in ext.abiCodes (universal) => map lowest possible version code
        if (baseAbiVersionCode != null) {
            output.versionCodeOverride = baseAbiVersionCode * 1000 + variant.versionCode
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    // Android Support libraries
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.android.support:exifinterface:28.0.0'
    implementation 'com.android.support:customtabs:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.android.support:exifinterface:28.0.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.gms:play-services-oss-licenses:16.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    /// Firebase
    implementation 'com.google.firebase:firebase-core:16.0.4'       // Analytics
    implementation 'com.google.firebase:firebase-ads:17.0.0'        // Ads
    implementation 'com.google.firebase:firebase-storage:16.0.3'    // Storage
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'  // Crashlytics
    implementation 'com.google.firebase:firebase-ml-vision:18.0.1'  // OCR - text recognition
    implementation 'com.google.firebase:firebase-perf:16.1.2'       // Performance

    implementation 'com.anjlab.android.iab.v3:library:1.0.44'       // Billing
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'           // RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'              // RxJAVA
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'          // Retrofit for HTTP requests
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'    // Retrofit Gson for parsing json
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'   // Retrofit adapter for Rx
    implementation 'com.jakewharton.timber:timber:4.7.1'            // Logger
    implementation 'com.annimon:stream:1.2.1'                       // Stream API
    implementation 'org.apache.commons:commons-lang3:3.8.1'         // Apache Commons: Utilities

    implementation 'io.fotoapparat:fotoapparat:2.5.0'               // Camera View
    implementation 'de.hdodenhof:circleimageview:2.2.0'             // Circle ImageView
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'     // Swipe layout (swipe items in document list)
    implementation 'com.github.vihtarb:tooltip:0.1.9'               // Popups for tutorial

    implementation 'com.caverock:androidsvg-aar:1.3'                // SVG for Android
    implementation 'com.github.bumptech.glide:glide:4.8.0'          // Glide - Image loader
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'com.google.firebase.firebase-perf'
